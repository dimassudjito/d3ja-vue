{"remainingRequest":"/home/dimas/Dev/d3ja-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dimas/Dev/d3ja-vue/src/lib-components/TreeOfLife.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dimas/Dev/d3ja-vue/src/lib-components/TreeOfLife.vue","mtime":1623728146838},{"path":"/home/dimas/Dev/d3ja-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dimas/Dev/d3ja-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/dimas/Dev/d3ja-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dimas/Dev/d3ja-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TreeOfLife.vue"],"names":[],"mappings":";;;;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"TreeOfLife.vue","sourceRoot":"src/lib-components","sourcesContent":["<template>\n  <div class=\"container\"></div>\n</template>\n\n<script>\nimport * as d3 from 'd3'\n\nfunction linkStep(startAngle, startRadius, endAngle, endRadius) {\n  const c0 = Math.cos((startAngle = ((startAngle - 90) / 180) * Math.PI))\n  const s0 = Math.sin(startAngle)\n  const c1 = Math.cos((endAngle = ((endAngle - 90) / 180) * Math.PI))\n  const s1 = Math.sin(endAngle)\n  return (\n    'M' +\n    startRadius * c0 +\n    ',' +\n    startRadius * s0 +\n    (endAngle === startAngle\n      ? ''\n      : 'A' +\n        startRadius +\n        ',' +\n        startRadius +\n        ' 0 0 ' +\n        (endAngle > startAngle ? 1 : 0) +\n        ' ' +\n        startRadius * c1 +\n        ',' +\n        startRadius * s1) +\n    'L' +\n    endRadius * c1 +\n    ',' +\n    endRadius * s1\n  )\n}\n\nfunction linkExtensionConstant(d) {\n  return linkStep(d.target.x, d.target.y, d.target.x, this.innerRadius)\n}\n\nfunction linkExtensionVariable(d) {\n  return linkStep(d.target.x, d.target.radius, d.target.x, this.innerRadius)\n}\n\nfunction linkConstant(d) {\n  return linkStep(d.source.x, d.source.y, d.target.x, d.target.y)\n}\n\nexport default {\n  name: 'TreeOfLife',\n  props: {\n    tree: String\n  },\n  mounted() {\n    this.getChart()\n  },\n  data() {\n    return {\n      width: 900\n    }\n  },\n  computed: {\n    outerRadius() {\n      return this.width / 2\n    },\n    innerRadius() {\n      return this.outerRadius - 170\n    }\n  },\n  methods: {\n    parseNewick(a) {\n      for (\n        var e = [], r = {}, s = a.split(/\\s*(;|\\(|\\)|,|:)\\s*/), t = 0;\n        t < s.length;\n        t++\n      ) {\n        var n = s[t]\n        switch (n) {\n          case '(':\n            var c = {}\n            ;(r.branchset = [c]), e.push(r), (r = c)\n            break\n          case ',':\n            var c = {}\n            e[e.length - 1].branchset.push(c), (r = c)\n            break\n          case ')':\n            r = e.pop()\n            break\n          case ':':\n            break\n          default:\n            var h = s[t - 1]\n            ')' == h || '(' == h || ',' == h\n              ? (r.name = n)\n              : ':' == h && (r.length = parseFloat(n))\n        }\n      }\n      return r\n    },\n    getChart() {\n      let data = this.parseNewick(this.tree)\n      let legend = (svg) => {\n        const g = svg\n          .selectAll('g')\n          .data(color.domain())\n          .join('g')\n          .attr(\n            'transform',\n            (d, i) =>\n              `translate(${-this.outerRadius},${-this.outerRadius + i * 20})`\n          )\n\n        g.append('rect')\n          .attr('width', 18)\n          .attr('height', 18)\n          .attr('fill', color)\n\n        g.append('text')\n          .attr('x', 24)\n          .attr('y', 9)\n          .attr('dy', '0.35em')\n          .text((d) => d)\n      }\n\n      function linkVariable(d) {\n        return linkStep(\n          d.source.x,\n          d.source.radius,\n          d.target.x,\n          d.target.radius\n        )\n      }\n\n      // Set the color of each node by recursively inheriting.\n      function setColor(d) {\n        var name = d.data.name\n        d.color =\n          color.domain().indexOf(name) >= 0\n            ? color(name)\n            : d.parent\n            ? d.parent.color\n            : null\n        if (d.children) d.children.forEach(setColor)\n      }\n\n      // Set the radius of each node by recursively summing and scaling the distance from the root.\n      function setRadius(d, y0, k) {\n        d.radius = (y0 += d.data.length) * k\n        if (d.children) d.children.forEach((d) => setRadius(d, y0, k))\n      }\n\n      // Compute the maximum cumulative length of any node in the tree.\n      function maxLength(d) {\n        return d.data.length + (d.children ? d3.max(d.children, maxLength) : 0)\n      }\n\n      let color = d3\n        .scaleOrdinal()\n        .domain(['Bacteria', 'Eukaryota', 'Archaea'])\n        .range(d3.schemeCategory10)\n\n      let cluster = d3\n        .cluster()\n        .size([360, this.innerRadius])\n        .separation((a, b) => 1)\n      const root = d3\n        .hierarchy(data, (d) => d.branchset)\n        .sum((d) => (d.branchset ? 0 : 1))\n        .sort(\n          (a, b) =>\n            a.value - b.value || d3.ascending(a.data.length, b.data.length)\n        )\n\n      cluster(root)\n      setRadius(\n        root,\n        (root.data.length = 0),\n        this.innerRadius / maxLength(root)\n      )\n      setColor(root)\n\n      const svg = d3\n        .select('.container')\n        .append('svg')\n        .attr('viewBox', [\n          -this.outerRadius,\n          -this.outerRadius,\n          this.width,\n          this.width\n        ])\n        .attr('font-family', 'sans-serif')\n        .attr('font-size', 10)\n\n      svg.append('g').call(legend)\n\n      svg.append('style').text(`\n\n.link--active {\n  stroke: #000 !important;\n  stroke-width: 1.5px;\n}\n\n.link-extension--active {\n  stroke-opacity: .6;\n}\n\n.label--active {\n  font-weight: bold;\n}\n\n`)\n\n      const linkExtension = svg\n        .append('g')\n        .attr('fill', 'none')\n        .attr('stroke', '#000')\n        .attr('stroke-opacity', 0.25)\n        .selectAll('path')\n        .data(root.links().filter((d) => !d.target.children))\n        .join('path')\n        .each(function(d) {\n          d.target.linkExtensionNode = this\n        })\n        .attr('d', linkExtensionConstant)\n\n      const link = svg\n        .append('g')\n        .attr('fill', 'none')\n        .attr('stroke', '#000')\n        .selectAll('path')\n        .data(root.links())\n        .join('path')\n        .each(function(d) {\n          d.target.linkNode = this\n        })\n        .attr('d', linkConstant)\n        .attr('stroke', (d) => d.target.color)\n\n      svg\n        .append('g')\n        .selectAll('text')\n        .data(root.leaves())\n        .join('text')\n        .attr('dy', '.31em')\n        .attr(\n          'transform',\n          (d) =>\n            `rotate(${d.x - 90}) translate(${this.innerRadius + 4},0)${\n              d.x < 180 ? '' : ' rotate(180)'\n            }`\n        )\n        .attr('text-anchor', (d) => (d.x < 180 ? 'start' : 'end'))\n        .text((d) => d.data.name.replace(/_/g, ' '))\n        .on('mouseover', mouseovered(true))\n        .on('mouseout', mouseovered(false))\n\n      function update(checked) {\n        const t = d3.transition().duration(750)\n        linkExtension\n          .transition(t)\n          .attr('d', checked ? linkExtensionVariable : linkExtensionConstant)\n        link.transition(t).attr('d', checked ? linkVariable : linkConstant)\n      }\n\n      function mouseovered(active) {\n        return function(event, d) {\n          d3.select(this).classed('label--active', active)\n          d3.select(d.linkExtensionNode)\n            .classed('link-extension--active', active)\n            .raise()\n          do\n            d3.select(d.linkNode)\n              .classed('link--active', active)\n              .raise()\n          while ((d = d.parent))\n        }\n      }\n\n      return Object.assign(svg.node(), { update })\n    }\n  }\n}\n</script>\n\n<style></style>\n"]}]}
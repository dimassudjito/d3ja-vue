{"remainingRequest":"/home/dimas/Dev/d3ja-vue/node_modules/babel-loader/lib/index.js!/home/dimas/Dev/d3ja-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dimas/Dev/d3ja-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dimas/Dev/d3ja-vue/src/lib-components/TreeOfLife.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dimas/Dev/d3ja-vue/src/lib-components/TreeOfLife.vue","mtime":1623728146838},{"path":"/home/dimas/Dev/d3ja-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dimas/Dev/d3ja-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/dimas/Dev/d3ja-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dimas/Dev/d3ja-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TreeOfLife.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\"></div>\n</template>\n\n<script>\nimport * as d3 from 'd3'\n\nfunction linkStep(startAngle, startRadius, endAngle, endRadius) {\n  const c0 = Math.cos((startAngle = ((startAngle - 90) / 180) * Math.PI))\n  const s0 = Math.sin(startAngle)\n  const c1 = Math.cos((endAngle = ((endAngle - 90) / 180) * Math.PI))\n  const s1 = Math.sin(endAngle)\n  return (\n    'M' +\n    startRadius * c0 +\n    ',' +\n    startRadius * s0 +\n    (endAngle === startAngle\n      ? ''\n      : 'A' +\n        startRadius +\n        ',' +\n        startRadius +\n        ' 0 0 ' +\n        (endAngle > startAngle ? 1 : 0) +\n        ' ' +\n        startRadius * c1 +\n        ',' +\n        startRadius * s1) +\n    'L' +\n    endRadius * c1 +\n    ',' +\n    endRadius * s1\n  )\n}\n\nfunction linkExtensionConstant(d) {\n  return linkStep(d.target.x, d.target.y, d.target.x, this.innerRadius)\n}\n\nfunction linkExtensionVariable(d) {\n  return linkStep(d.target.x, d.target.radius, d.target.x, this.innerRadius)\n}\n\nfunction linkConstant(d) {\n  return linkStep(d.source.x, d.source.y, d.target.x, d.target.y)\n}\n\nexport default {\n  name: 'TreeOfLife',\n  props: {\n    tree: String\n  },\n  mounted() {\n    this.getChart()\n  },\n  data() {\n    return {\n      width: 900\n    }\n  },\n  computed: {\n    outerRadius() {\n      return this.width / 2\n    },\n    innerRadius() {\n      return this.outerRadius - 170\n    }\n  },\n  methods: {\n    parseNewick(a) {\n      for (\n        var e = [], r = {}, s = a.split(/\\s*(;|\\(|\\)|,|:)\\s*/), t = 0;\n        t < s.length;\n        t++\n      ) {\n        var n = s[t]\n        switch (n) {\n          case '(':\n            var c = {}\n            ;(r.branchset = [c]), e.push(r), (r = c)\n            break\n          case ',':\n            var c = {}\n            e[e.length - 1].branchset.push(c), (r = c)\n            break\n          case ')':\n            r = e.pop()\n            break\n          case ':':\n            break\n          default:\n            var h = s[t - 1]\n            ')' == h || '(' == h || ',' == h\n              ? (r.name = n)\n              : ':' == h && (r.length = parseFloat(n))\n        }\n      }\n      return r\n    },\n    getChart() {\n      let data = this.parseNewick(this.tree)\n      let legend = (svg) => {\n        const g = svg\n          .selectAll('g')\n          .data(color.domain())\n          .join('g')\n          .attr(\n            'transform',\n            (d, i) =>\n              `translate(${-this.outerRadius},${-this.outerRadius + i * 20})`\n          )\n\n        g.append('rect')\n          .attr('width', 18)\n          .attr('height', 18)\n          .attr('fill', color)\n\n        g.append('text')\n          .attr('x', 24)\n          .attr('y', 9)\n          .attr('dy', '0.35em')\n          .text((d) => d)\n      }\n\n      function linkVariable(d) {\n        return linkStep(\n          d.source.x,\n          d.source.radius,\n          d.target.x,\n          d.target.radius\n        )\n      }\n\n      // Set the color of each node by recursively inheriting.\n      function setColor(d) {\n        var name = d.data.name\n        d.color =\n          color.domain().indexOf(name) >= 0\n            ? color(name)\n            : d.parent\n            ? d.parent.color\n            : null\n        if (d.children) d.children.forEach(setColor)\n      }\n\n      // Set the radius of each node by recursively summing and scaling the distance from the root.\n      function setRadius(d, y0, k) {\n        d.radius = (y0 += d.data.length) * k\n        if (d.children) d.children.forEach((d) => setRadius(d, y0, k))\n      }\n\n      // Compute the maximum cumulative length of any node in the tree.\n      function maxLength(d) {\n        return d.data.length + (d.children ? d3.max(d.children, maxLength) : 0)\n      }\n\n      let color = d3\n        .scaleOrdinal()\n        .domain(['Bacteria', 'Eukaryota', 'Archaea'])\n        .range(d3.schemeCategory10)\n\n      let cluster = d3\n        .cluster()\n        .size([360, this.innerRadius])\n        .separation((a, b) => 1)\n      const root = d3\n        .hierarchy(data, (d) => d.branchset)\n        .sum((d) => (d.branchset ? 0 : 1))\n        .sort(\n          (a, b) =>\n            a.value - b.value || d3.ascending(a.data.length, b.data.length)\n        )\n\n      cluster(root)\n      setRadius(\n        root,\n        (root.data.length = 0),\n        this.innerRadius / maxLength(root)\n      )\n      setColor(root)\n\n      const svg = d3\n        .select('.container')\n        .append('svg')\n        .attr('viewBox', [\n          -this.outerRadius,\n          -this.outerRadius,\n          this.width,\n          this.width\n        ])\n        .attr('font-family', 'sans-serif')\n        .attr('font-size', 10)\n\n      svg.append('g').call(legend)\n\n      svg.append('style').text(`\n\n.link--active {\n  stroke: #000 !important;\n  stroke-width: 1.5px;\n}\n\n.link-extension--active {\n  stroke-opacity: .6;\n}\n\n.label--active {\n  font-weight: bold;\n}\n\n`)\n\n      const linkExtension = svg\n        .append('g')\n        .attr('fill', 'none')\n        .attr('stroke', '#000')\n        .attr('stroke-opacity', 0.25)\n        .selectAll('path')\n        .data(root.links().filter((d) => !d.target.children))\n        .join('path')\n        .each(function(d) {\n          d.target.linkExtensionNode = this\n        })\n        .attr('d', linkExtensionConstant)\n\n      const link = svg\n        .append('g')\n        .attr('fill', 'none')\n        .attr('stroke', '#000')\n        .selectAll('path')\n        .data(root.links())\n        .join('path')\n        .each(function(d) {\n          d.target.linkNode = this\n        })\n        .attr('d', linkConstant)\n        .attr('stroke', (d) => d.target.color)\n\n      svg\n        .append('g')\n        .selectAll('text')\n        .data(root.leaves())\n        .join('text')\n        .attr('dy', '.31em')\n        .attr(\n          'transform',\n          (d) =>\n            `rotate(${d.x - 90}) translate(${this.innerRadius + 4},0)${\n              d.x < 180 ? '' : ' rotate(180)'\n            }`\n        )\n        .attr('text-anchor', (d) => (d.x < 180 ? 'start' : 'end'))\n        .text((d) => d.data.name.replace(/_/g, ' '))\n        .on('mouseover', mouseovered(true))\n        .on('mouseout', mouseovered(false))\n\n      function update(checked) {\n        const t = d3.transition().duration(750)\n        linkExtension\n          .transition(t)\n          .attr('d', checked ? linkExtensionVariable : linkExtensionConstant)\n        link.transition(t).attr('d', checked ? linkVariable : linkConstant)\n      }\n\n      function mouseovered(active) {\n        return function(event, d) {\n          d3.select(this).classed('label--active', active)\n          d3.select(d.linkExtensionNode)\n            .classed('link-extension--active', active)\n            .raise()\n          do\n            d3.select(d.linkNode)\n              .classed('link--active', active)\n              .raise()\n          while ((d = d.parent))\n        }\n      }\n\n      return Object.assign(svg.node(), { update })\n    }\n  }\n}\n</script>\n\n<style></style>\n"],"sourceRoot":"src/lib-components"}]}